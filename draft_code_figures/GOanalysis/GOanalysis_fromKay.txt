#using modified versions of pl and sh scripts from Rob
#on darjeeling, for both Cendif1 and Cendif2
 perl Arab_Pipe.pl /home/kgturner/Centaurea_diffusa_expression/GOanalysis/ Cendif1.unigenes


 perl vert2hor.pl unique.sorted.out.ath_Cendif1.unigenes_GO

#flip files transfered to local for R?

#####GO analysis from Kay####

#blastx contigs against Arabidopsis
#pipeline
perl /home/scripts/Arab_Pipe.pl <path of directory> <file name>

#It will do a blasts against the TAIR10 database, filter out the hits that don’t meet your cut-offs 
#(to change this edit the file shell_blastx_arab.sh in the same folder) 
#get the top hit for each transcript using blast_top.pl, 
#and then join it with the GO terms in /data/databases/ATH_GO_GOSLIM.txt

#may need to do other things here????

#convert file of contigs and go terms into horizontal format for R
perl  /home/scripts/vert2hor.pl $f\_all.go > $f\_all_hort.go


####possible other stuff, maybe redundant/unneccessary
#This is what I did for each pairwise comparison in the annotation folder

for f in `cat list.txt`
do
sed 's/://g' $f > tmp.txt

#changes it so each contig is on a single line matching its orthogroup
perl /home/scripts/horizontal2vertical.pl tmp.txt > $f\_all.txt

#merge blast results with orthogroup information
join -j1 -j1 <(awk '{print $2"\t"$1}' $f\_all.txt | sed 's/|/_/g' | sort -k1,1) <(sort -k1,1 unique.sorted.out.blastp_all.2) | awk '{print $3"\t"$1"\t"$2"\t"$4}' > tmp.txt 

#merge with GO terms and then remove redundant GO terms for each orthogroup
join -j1 -j1 <(awk '{print $3"_cds\t"$1}' tmp.txt | sed 's/.[1-9]$//g' | awk '{print $2"\t"$1}' | sort -k1,1 -u) <(awk 'BEGIN{FS="\t"}{print $1"\t"$6}' /data/databases/ATH_GO_GOSLIM.txt | sort -k1,1 ) | awk '{print $2"\t"$3}' | sort -u > $f\_all.go

#this script converts to horizontal format that is required for the R package topGO
perl  /home/scripts/vert2hor.pl $f\_all.go > $f\_all_hort.go
done